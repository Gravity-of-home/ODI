spring:
  profiles:
    active: local
    group:
      local: db-local
      server: db-server
    include:
      - db
      - security
      - oauth
      - jwt
  datasource:
    driver-class-name: ${DATABASE_DRIVER}
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
#      password: ${REDIS_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${JPA_HIBERNATE_DDL_AUTO}
    open-in-view: false
    dialect: org.hibernate.spatial.dialect.mysql.MySQL8SpatialDialect

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_SECRET}
            redirect-uri: ${BACK_BASE_URL}/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: nickname, name, email, gender, birthday, profile_image, birthyear

        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response

  elasticsearch:
    username: ${ELASTIC_USERNAME}
    password: ${ELASTIC_PASSWORD}
    uris: ${ELASTIC_URL}:${ELASTIC_PORT}

springdoc:
  api-docs:
    path: /api/api-docs
  swagger-ui:
    doc-expansion: none
    tags-sorter: alpha
    operationsSorter: method
    disable-swagger-default-url: true
    display-request-duration: true
    info:
      title: üçá O d! API Server
      description: <b>Ïò§Îîî</b>ÍπåÏßÄ Í∞ÄÏÑ∏Ïú†~? üöï
      version: 0.0.1
    path: /api/

jwt:
  secret-key: ${JWT_SECRET_KEY}

payment:
  toss:
    test_client_api_key: ${TOSS_CLIENT_API_KEY}
    test_secret_api_key: ${TOSS_SECRET_API_KEY}